diff --git a/extras/Build/CMake/JUCEUtils.cmake b/extras/Build/CMake/JUCEUtils.cmake
index 07dc5f2d1..85e0d3164 100644
--- a/extras/Build/CMake/JUCEUtils.cmake
+++ b/extras/Build/CMake/JUCEUtils.cmake
@@ -1102,10 +1102,11 @@ function(juce_enable_vst3_manifest_step shared_code_target)
     set(ouput_path "${product}/Contents/Resources/moduleinfo.json")
 
     # Use the helper tool to write out the moduleinfo.json
+    separate_arguments(CMAKE_CROSSCOMPILING_EMULATOR)
     add_custom_command(TARGET ${target_name} POST_BUILD
         COMMAND ${CMAKE_COMMAND} -E echo "creating ${ouput_path}"
         COMMAND ${CMAKE_COMMAND} -E make_directory "${product}/Contents/Resources"
-        COMMAND juce_vst3_helper
+        COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} juce_vst3_helper
             -create
             -version "${target_version_string}"
             -path "${product}"
@@ -1351,8 +1352,9 @@ function(_juce_set_plugin_target_properties shared_code_target kind)
 
         _juce_add_lv2_manifest_helper_target()
 
+        separate_arguments(CMAKE_CROSSCOMPILING_EMULATOR)
         add_custom_command(TARGET ${target_name} POST_BUILD
-            COMMAND juce_lv2_helper "$<TARGET_FILE:${target_name}>"
+            COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} juce_lv2_helper "$<TARGET_FILE:${target_name}>"
             VERBATIM)
 
         _juce_set_copy_properties(${shared_code_target} ${target_name} "${output_path}" JUCE_LV2_COPY_DIR)
diff --git a/extras/Build/juceaide/CMakeLists.txt b/extras/Build/juceaide/CMakeLists.txt
index 17e552097..9053e9234 100644
--- a/extras/Build/juceaide/CMakeLists.txt
+++ b/extras/Build/juceaide/CMakeLists.txt
@@ -44,6 +44,10 @@ if(JUCE_BUILD_HELPER_TOOLS)
     target_compile_definitions(juceaide PRIVATE
         JUCE_DISABLE_JUCE_VERSION_PRINTING=1
         JUCE_USE_CURL=0
+        JUCE_USE_XCURSOR=0
+        JUCE_USE_XINERAMA=0
+        JUCE_USE_XRANDR=0
+        JUCE_USE_XSHM=0
         # This is a temporary workaround to allow builds to complete on Xcode 15.
         # Add -Wl,-ld_classic to the OTHER_LDFLAGS build setting if you need to
         # deploy to older versions of macOS.
@@ -63,7 +67,7 @@ if(JUCE_BUILD_HELPER_TOOLS)
 else()
     message(STATUS "Configuring juceaide")
 
-    if(CMAKE_CROSSCOMPILING)
+    if(CMAKE_CROSSCOMPILING AND NOT CMAKE_CROSSCOMPILING_EMULATOR)
         unset(ENV{ADDR2LINE})
         unset(ENV{AR})
         unset(ENV{ASM})
@@ -178,7 +182,8 @@ else()
 
     message(STATUS "Testing juceaide")
 
-    execute_process(COMMAND "${imported_location}" version
+    separate_arguments(CMAKE_CROSSCOMPILING_EMULATOR)
+    execute_process(COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} "${imported_location}" version
         RESULT_VARIABLE result_variable
         OUTPUT_VARIABLE output
         ERROR_VARIABLE output)
